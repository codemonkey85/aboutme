@page "/resume"

<PageTitle>
    @Constants.SiteName - Résumé
</PageTitle>

<MudText Typo="@Typo.h3">
    My Résumé
</MudText>

<MudText Typo="@Typo.h5">
    @resumeModel.Name
</MudText>

<MudText Typo="@Typo.body1">
    @resumeModel.Summary
</MudText>

<MudLink Href="@($"mailto:{resumeModel.Email}?subject=Resume")">
    @resumeModel.Email
</MudLink>

<div class="my-3">
    <SocialLinkComponent SocialLink="@SocialLink.MyGitHub"
                         CompactMode
                         NameOverride="Follow me on GitHub"
                         TitleOverride="Follow me on GitHub"/>
</div>

<MudDivider DividerType="@DividerType.FullWidth"
            Class="my-2"/>

@if (resumeModel.ResumeSkills is { Count: > 0 })
{
    <MudStack Row>
        <MudText Typo="@Typo.h5"
                 Class="mb-1">
            Skills
        </MudText>
        @if (SelectedSkills.Any())
        {
            <MudButton OnClick="@ClearSelectedSkills"
                       Variant="@Variant.Filled"
                       Color="@Color.Default"
                       Size="@Size.Small"
                       StartIcon="@Icons.Material.Filled.Clear"
                       style="height: 30px;"
                       title="Clear Selection">
                Clear Selection
            </MudButton>
        }
    </MudStack>
    <MudAlert Severity="@Severity.Info"
              Dense>
        Click or tap a skill to filter.
    </MudAlert>
    @SkillsFragment(resumeModel.ResumeSkills, showYearsUsed: true)
}

@if (resumeModel.Jobs is { Count: > 0 })
{
    <MudText Typo="@Typo.h5"
             Class="mb-1">
        Experience
    </MudText>
    <MudStack Spacing="3"
              Class="mb-1">
        @foreach (var job in resumeModel.Jobs
                          .Where(job => !SelectedSkills.Any() || SelectedSkills.All(job.SkillsUsed.Contains))
                          .OrderByDescending(job => job.PresentlyEmployed)
                          .ThenByDescending(job => job.EndDate))
        {
            <MudCard>
                <MudCardHeader>
                    <MudStack Spacing="0">
                        <MudText Typo="@Typo.h5">
                            @job.Title
                        </MudText>
                        @if (job.CompanyUrl is { Length: > 0 } url)
                        {
                            <MudLink Typo="@Typo.subtitle1"
                                     Href="@url"
                                     Target="_blank">
                                @job.Company
                            </MudLink>
                        }
                        else
                        {
                            <MudText Typo="@Typo.subtitle1">
                                @job.Company
                            </MudText>
                        }
                        <MudText Typo="@Typo.body2">
                            @job.TimeAtJobString
                        </MudText>
                    </MudStack>
                </MudCardHeader>
                <MudCardContent>
                    @if (job.Summary is { Length: > 0 })
                    {
                        <MudText Typo="@Typo.body1"
                                 Class="mb-1">
                            @job.Summary
                        </MudText>
                    }
                    @if (job.SkillsUsed is { Count: > 0 })
                    {
                        @SkillsFragment(job.SkillsUsed)
                    }
                    @if (job.Duties is { Count: > 0 })
                    {
                        <ul>
                            @foreach (var duty in job.Duties)
                            {
                                if (duty.Description is not { Length: > 0 })
                                {
                                    continue;
                                }

                                <li>
                                    @duty.Description
                                </li>
                            }
                        </ul>
                    }
                </MudCardContent>
            </MudCard>
        }
    </MudStack>
}

<style>
    ul, li {
        list-style: initial;
        margin-left: 0.5rem;
    }
</style>

@code {

    private RenderFragment SkillsFragment(IEnumerable<Skill> skills, bool showYearsUsed = false) =>
        @<MudGrid Class="mb-1"
                  Spacing="0">
            @foreach (var skill in skills.OrderBy(skill => skill.Name))
            {
                <MudItem>
                    <MudChip T="@string"
                             title="@skill.Title"
                             OnClick="@(() => OnSelectSkill(skill))"
                             Color="@GetSkillColor(skill)"
                             Size="@(showYearsUsed
                                       ? Size.Large
                                       : null)">
                        @if (showYearsUsed && skill.TimeUsed.Days >= 31)
                        {
                            <MudStack Spacing="0">
                                <MudText Typo="Typo.caption">
                                    @skill.Name
                                </MudText>
                                <MudText Typo="Typo.caption">
                                    @skill.TimeUsedString
                                </MudText>
                            </MudStack>
                        }
                        else
                        {
                            <MudText Typo="Typo.caption">
                                @skill.Name
                            </MudText>
                        }
                    </MudChip>
                </MudItem>
            }
        </MudGrid>;

}
